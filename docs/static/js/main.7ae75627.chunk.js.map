{"version":3,"sources":["components/EmployeeForm.js","components/Header.js","context/EmployeeContext.js","components/AddEmployee.js","components/Employee.js","components/EmployeeList.js","api.js","components/EditEmployee.js","hooks/useLocalStorage.js","router/AppRouter.js","index.js"],"names":["uID","uuid","uuidv4","parsedUuid","parse","Buffer","from","readUInt32BE","EmployeeForm","employee","handleOnSubmit","useState","emp","setEmp","errorMsg","setErrorMsg","inputChange","event","target","name","value","prevState","className","onSubmit","preventDefault","designation","every","field","trim","id","date","Date","Group","controlId","Label","Control","type","placeholder","onChange","variant","Header","to","activeClassName","exact","EmployeeContext","createContext","AddEmployee","history","useContext","emps","setEmps","api","a","push","Employee","handleRemoveEmployee","useHistory","Card","style","width","Body","Title","toDateString","Button","onClick","EmployeeList","filter","_","isEmpty","map","method","body","params","url","options","mode","headers","Accept","data","axios","EditEmployee","useParams","empToEdit","find","filteredEmps","useLocalStorage","key","initialValue","localValue","localStorage","getItem","JSON","error","setValue","useEffect","setItem","stringify","AppRouter","then","res","status","console","log","Provider","component","EmployeesList","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7ae75627.chunk.js","sourcesContent":["import { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { v4 as uuidv4, parse } from 'uuid'\r\n\r\nconst uID = () => {\r\n  let uuid = uuidv4()\r\n  let parsedUuid = parse(uuid)\r\n  let buffer = Buffer.from(parsedUuid)\r\n  let randInt = buffer.readUInt32BE(0)\r\n  return randInt\r\n}\r\n\r\nconst EmployeeForm = ({ employee, handleOnSubmit }) => {\r\n  const [emp, setEmp] = useState(employee ?? {})\r\n\r\n  const [errorMsg, setErrorMsg] = useState('')\r\n\r\n  const onSubmit = event => {\r\n    event.preventDefault()\r\n    const values = [emp.name, emp.designation]\r\n    let errorMsg = ''\r\n\r\n    const allFieldsFilled = values.every(field => {\r\n      const value = `${field}`.trim()\r\n      return value !== '' && value !== '0'\r\n    })\r\n\r\n    if (allFieldsFilled) {\r\n      const employee = {\r\n        id: emp.id ?? uID(),\r\n        name: emp.name,\r\n        designation: emp.designation,\r\n        date: emp.date ?? new Date(),\r\n      }\r\n      handleOnSubmit(employee)\r\n    } else errorMsg = 'Please fill out all the fields.'\r\n\r\n    setErrorMsg(errorMsg)\r\n  }\r\n\r\n  const inputChange = event => {\r\n    const { name, value } = event.target\r\n    setEmp(prevState => ({\r\n      ...prevState,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  return (\r\n    <div className='main-form'>\r\n      {errorMsg && <p className='errorMsg'>{errorMsg}</p>}\r\n      <Form onSubmit={onSubmit}>\r\n        <Form.Group controlId='name'>\r\n          <Form.Label>Employee Name</Form.Label>\r\n          <Form.Control\r\n            className='input-control'\r\n            type='text'\r\n            name='name'\r\n            value={emp.name}\r\n            placeholder='Enter name of the Employee'\r\n            onChange={inputChange}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId='designation'>\r\n          <Form.Label>Designation</Form.Label>\r\n          <Form.Control\r\n            className='input-control'\r\n            type='text'\r\n            name='designation'\r\n            value={emp.designation}\r\n            placeholder='Enter the designation of the Employee'\r\n            onChange={inputChange}\r\n          />\r\n        </Form.Group>\r\n        <Button variant='primary' type='submit' className='submit-btn'>\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EmployeeForm\r\n","import { NavLink } from 'react-router-dom'\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header>\r\n      <h1>Admin Panel</h1>\r\n      <hr />\r\n      <div className='links'>\r\n        <NavLink to='/' className='link' activeClassName='active' exact>\r\n          Employee List\r\n        </NavLink>\r\n        <NavLink to='/add' className='link' activeClassName='active'>\r\n          Add Employee\r\n        </NavLink>\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import { createContext } from 'react'\r\n\r\nconst EmployeeContext = createContext([])\r\n\r\nexport default EmployeeContext\r\n","import { Fragment, useContext } from 'react'\r\nimport EmployeeContext from '../context/EmployeeContext'\r\nimport EmployeeForm from './EmployeeForm'\r\n\r\nconst AddEmployee = ({ history }) => {\r\n  const { emps, setEmps, api } = useContext(EmployeeContext)\r\n\r\n  const handleOnSubmit = async emp => {\r\n    await setEmps([...emps, emp])\r\n    api('POST', emp)\r\n    history.push('/')\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <EmployeeForm employee={{}} handleOnSubmit={handleOnSubmit} />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default AddEmployee\r\n","import { Button, Card } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst Employee = ({ emp, handleRemoveEmployee }) => {\r\n  const history = useHistory()\r\n  const { id, name, designation, date } = emp\r\n  return (\r\n    <Card style={{ width: '18rem' }} className='emp'>\r\n      <Card.Body>\r\n        <Card.Title className='emp-title'>{name}</Card.Title>\r\n        <div className='emp-details'>\r\n          <div>Name: {name}</div>\r\n          <div>Designation: {designation} </div>\r\n          <div>Date: {new Date(date).toDateString()}</div>\r\n        </div>\r\n        <Button variant='primary' onClick={() => history.push(`/edit/${id}`)}>\r\n          Edit\r\n        </Button>{' '}\r\n        <Button variant='danger' onClick={() => handleRemoveEmployee(id)}>\r\n          Delete\r\n        </Button>\r\n      </Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Employee\r\n","import { Fragment, useContext, useEffect } from 'react'\r\nimport _ from 'lodash'\r\nimport Employee from './Employee'\r\nimport EmployeeContext from '../context/EmployeeContext'\r\n\r\nconst EmployeeList = () => {\r\n  const { emps, setEmps, api } = useContext(EmployeeContext)\r\n\r\n  const handleRemoveEmployee = id => {\r\n    setEmps(emps.filter(emp => emp.id !== id))\r\n    api('DELETE', {}, id)\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className='emp-list'>\r\n        {!_.isEmpty(emps) ? (\r\n          emps.map(emp => (\r\n            <Employee\r\n              key={emp.id}\r\n              emp={emp}\r\n              handleRemoveEmployee={handleRemoveEmployee}\r\n            />\r\n          ))\r\n        ) : (\r\n          <p className='message'>Welcome to the Admin Dashboard</p>\r\n        )}\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default EmployeeList\r\n","import axios from 'axios'\r\n\r\nconst api = (method = 'GET', body, params = null) => {\r\n  let url = 'https://dashboard-employee.herokuapp.com/employee'\r\n  // let url = 'http://localhost:3237/employee'\r\n  if (params) url += `/${params}`\r\n  const options = {\r\n    method,\r\n    url: url,\r\n    mode: 'cors',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json;charset=UTF-8',\r\n    },\r\n    data: body,\r\n  }\r\n  return axios(options)\r\n}\r\n\r\nexport default api\r\n","import { useContext } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport api from '../api.js'\r\nimport EmployeeContext from '../context/EmployeeContext'\r\nimport EmployeeForm from './EmployeeForm'\r\n\r\nconst EditEmployee = ({ history }) => {\r\n  const { emps, setEmps, api } = useContext(EmployeeContext)\r\n  const { id } = useParams() // eslint-disable-next-line\r\n  const empToEdit = emps.find(emp => emp.id == id) //=== doesnt work as localStorage stores as string.\r\n\r\n  const handleOnSubmit = emp => {\r\n    // eslint-disable-next-line\r\n    const filteredEmps = emps.filter(emp => emp.id != id)\r\n    setEmps([emp, ...filteredEmps])\r\n    api('PATCH', emp, id)\r\n    history.push('/')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <EmployeeForm employee={empToEdit} handleOnSubmit={handleOnSubmit} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EditEmployee\r\n","import { useState, useEffect } from 'react'\r\n\r\nconst useLocalStorage = (key, initialValue) => {\r\n  const [value, setValue] = useState(() => {\r\n    try {\r\n      const localValue = localStorage.getItem(key)\r\n      return localValue ? JSON.parse(localValue) : initialValue\r\n    } catch (error) {\r\n      return initialValue\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(key, JSON.stringify(value))\r\n  }, [key, value])\r\n\r\n  return [value, setValue]\r\n}\r\n\r\nexport default useLocalStorage\r\n","import React from 'react'\r\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom'\r\nimport Header from '../components/Header'\r\nimport AddEmployee from '../components/AddEmployee'\r\nimport EmployeesList from '../components/EmployeeList'\r\nimport EditEmployee from '../components/EditEmployee'\r\nimport EmployeeContext from '../context/EmployeeContext'\r\nimport useLocalStorage from '../hooks/useLocalStorage'\r\nimport api from '../api.js'\r\nimport { useEffect } from 'react'\r\n\r\nconst AppRouter = () => {\r\n  const [emps, setEmps] = useLocalStorage('emps', [])\r\n\r\n  useEffect(() => {\r\n    api().then(res => {\r\n      if (res.status != 500) {\r\n        let data = res.data\r\n        setEmps(data)\r\n      }\r\n    })\r\n    console.log('mount')\r\n  }, [])\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <div>\r\n        <Header />\r\n        <div className='main-content'>\r\n          <EmployeeContext.Provider value={{ emps, setEmps, api }}>\r\n            <Switch>\r\n              <Route component={EmployeesList} path='/' exact={true} />\r\n              <Route component={AddEmployee} path='/add' />\r\n              <Route component={EditEmployee} path='/edit/:id' />\r\n              <Route component={() => <Redirect to='/' />} />\r\n            </Switch>\r\n          </EmployeeContext.Provider>\r\n        </div>\r\n      </div>\r\n    </BrowserRouter>\r\n  )\r\n}\r\n\r\nexport default AppRouter\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport AppRouter from './router/AppRouter'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './styles.scss'\r\n\r\nReactDOM.render(<AppRouter />, document.getElementById('root'))\r\n"],"sourceRoot":""}